Program usage:
User may provide one argument: number of records(to be sorted) [with -n option]
Program Behaviours:
1.If you have not specified either or any of the required arguments, we assume default values of:	Number of records: 10000
2.The number of records must be greater than or equal to 0.

*********Number of records: 1000000***********

*********Input generation start!!********
*************** SYSTEM CONFIGURATION USED (in # of records) ***************
RAM CAPACITY : 1024
BUFFER CAPACITY : 32
CACHE CAPACITY : 16
PAGE SIZE : 4
**********************************************************


Starting the sort now:



All records scanned

************************************************************************
Stats for input 
Parity Check(XOR): 14
Number of inversions : 204465 
Witnessed rows : 409485 
************************************************************************
Scan.cpp:51:~ScanIterator produced 1000000 of 1000000 rows

*********Input generation complete!!********
Filter.cpp:39:~FilterIterator produced 409485 of 1000000 rows
Number of buffer spills: 25497


Completed the sort!!

***************Execution time for exeternal merge sort: 15485.6 ms ***************
Sort.cpp:200:SortIterator *** The main thing! *** consumed 409485 rows
Iterator.cpp:41:run entire plan produced 409485 rows
************************************************************************
Stats for output 
Parity Check(XOR): 14
Number of inversions : 0 
Witnessed rows : 409485 
************************************************************************
Sort.cpp:210:~SortIterator *** The main thing! *** produced 409485 of 409485 rows
